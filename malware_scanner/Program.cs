using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Program
{
    static void Main(string[] args)
    {
        // Define the known malicious sequence
        // Example:
        var maliciousSequence = new List<string>
        {
            "OpenProcess",
            "VirtualAllocEx",
            "WriteProcessMemory"
        };

        // Load system call trace from the file
        var syscallPath = "system_trace.txt";
        if (!File.Exists(syscallPath))
        {
            Console.WriteLine($"Error: {syscallPath} not found.");
            return;
        }

        var systemCalls = File.ReadAllLines(syscallPath)
                              .Select(line => line.Trim())
                              .Where(line => !string.IsNullOrWhiteSpace(line))
                              .ToList();

        int totalCalls = systemCalls.Count;
        int sequenceLength = maliciousSequence.Count;
        var matchIndexes = new List<int>();

        // Match using sliding window
        for (int i = 0; i <= totalCalls - sequenceLength; i++)
        {
            var window = systemCalls.GetRange(i, sequenceLength);
            if (window.SequenceEqual(maliciousSequence))
            {
                matchIndexes.Add(i);
            }
        }

        // Results
        if (matchIndexes.Count > 0)
        {
            Console.WriteLine("Malware Detected!");
            Console.WriteLine("Matched sequence at indexes:");
            foreach (var index in matchIndexes)
            {
                Console.WriteLine($"  • Starting at index {index}");
            }
        }
        else
        {
            Console.WriteLine("No matches found");
        }
    }
}
